---
- hosts: localhost
  become: true
  vars:
    local_user: fredrick

  tasks:
    ##########
    ## Brew ##
    ##########

    - name: shell - check if brew is present
      command: brew -v
      register: brew_present
      ignore_errors: true

    - name: shell - install brew
      shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      when: brew_present is failed

    - name: brew - tap
      homebrew_tap:
        name:
          - koekeishiya/formulae # provides: yabai, skhd
          - cormacrelf/tap # provides: dark-notify
          - zackelia/formulae # provides: bclm
          - homebrew/autoupdate # provides: autoupdate
      become_user: "{{ local_user }}"

    - name: brew - cli tools
      homebrew:
        name:
          - bat
          - bclm
          - coreutils
          - curl
          - dark-notify # light/dark theme events to neovim/alacritty
          - direnv
          - ed
          - findutils
          - fzf
          - gawk
          - git
          - gnu-sed
          - gnu-tar
          - gnupg
          - grep
          - htop
          - jq
          - less
          - make
          - make
          - neofetch
          - neovim
          - parallel
          - pinentry-mac # required for gnupg on macos
          - skhd
          - sleepwatcher
          - tmux
          - tree
          - vim
          - wget
          - xz
          - yabai
          - yq
          - zsh
        state: present
      become_user: "{{ local_user }}"

    - name: brew - container tools
      homebrew:
        name:
          - lima
          - colima
          - docker
          - kind
        state: present
      become_user: "{{ local_user }}"

    - name: brew - casks gui tools
      homebrew_cask:
        name:
          - alacritty
          - betterdisplay
          - discord
          - firefox
          - launchcontrol
          - moonlight
          - netnewswire
          - obs
          - prusaslicer
          - steam
          - tailscale
          - utm
          - visual-studio-code
        state: present
        install_options: force
      become_user: "{{ local_user }}"

    ##########
    ## asdf ##
    ##########

    - name: asdf - clone asdf repository
      git:
        repo: "https://github.com/asdf-vm/asdf.git"
        dest: "~/.asdf"
        version: v0.14.0
        update: no
        accept_hostkey: yes
      become_user: "{{ local_user }}"

    - name: asdf - add, install and set global versions
      shell: . $HOME/.asdf/asdf.sh && asdf plugin add "{{ item }}" && asdf install "{{ item }}" latest && asdf global "{{ item }}" latest
      loop:
        - air
        - argo
        - argo-rollouts
        - argocd
        - awscli
        - cilium-cli
        - gcloud
        - github-cli
        - golang
        - helm
        - istioctl
        - kompose
        - krew
        - kubectl
        - kubelogin
        - operator-sdk
        - pulumi
        - python
        - sops
        - stern
        - terraform
        - terraform-docs
      register: asdf_add_result
      failed_when:
        - asdf_add_result.rc == 1 or asdf_add_result.rc == 2 and not "'already added' in asdf_add_result.stderr" # Already added plugin should be rc0..
      become_user: "{{ local_user }}"

    ############
    ## Custom ##
    ############

    # Install Rosetta

    - name: rosetta - check if installed
      stat:
        path: /Library/Apple/usr/libexec/oah
      register: rosetta

    - name: rosetta - install
      command: softwareupdate --install-rosetta --agree-to-license
      when: not rosetta.stat.exists

    # YabaiIndicator, https://github.com/xiamaz/YabaiIndicator
    # it has no brew cask, requires manual install
    # however, it is way better than the alternatives
    # so adding some custom tasks for this app is worth the hassle

    - name: yabai-indicator - get latest url
      shell: curl -s https://api.github.com/repos/xiamaz/YabaiIndicator/releases/latest | grep browser_download_url | cut -d '"' -f 4
      register: yabai_indicator_url

    - name: yabai-indicator - create temporary directory
      tempfile:
        state: directory
      register: tempdir

    - name: yabai-indicator - install to /Applications
      unarchive:
        remote_src: yes
        src: "{{ yabai_indicator_url.stdout }}"
        dest: "{{ tempdir.path }}"

    - name: yabai-indicator - copy YabaiIndicator.app to target directory
      copy:
        src: "{{ tempdir.path }}/{{ yabai_indicator_url.stdout | basename | regex_replace('\\.zip$', '') }}/YabaiIndicator.app"
        dest: /Applications
        remote_src: yes
        mode: preserve

    - name: yabai-indicator - clean up temporary directory
      file:
        path: "{{ tempdir.path }}"
        state: absent
