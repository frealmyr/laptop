---
- hosts: localhost
  become: true

  tasks:
    ###########
    ## Shell ##
    ###########

    - name: set zsh as default shell
      shell: chsh -s $(which zsh) fredrick

    ###########
    ## Power ##
    ###########

    # Enable GuC, and HuC
    # Disable GVT-g virtualization as it is incompatible with GuC
    # https://ask.fedoraproject.org/t/intel-graphics-best-practices-and-settings-for-hardware-acceleration/21119

    - name: gpu - check cpu info
      shell: grep -m 1 'model name' /proc/cpuinfo | grep Intel
      ignore_errors: True
      check_mode: False
      changed_when: False
      register: intel_gpu_gen9

    - name: gpu - enable i915 features
      ansible.builtin.blockinfile:
        path: /etc/modprobe.d/i915.conf
        block: |
          options i915 enable_guc=3
          options i915 enable_fbc=1
        create: yes
      when: intel_gpu_gen9.rc == 0

    - name: i915 - rebuild intramfs
      command: dracut --force
      when: intel_gpu_gen9.rc == 0

    - name: systemd - enable tuned service
      ansible.builtin.systemd:
        name: tuned
        state: started
        enabled: true

    #################
    ## UI & Themes ##
    #################

    - name: systemd - get current systemd default
      command: "systemctl get-default"
      changed_when: false
      register: systemdefault

    - name: systemd - default to graphical target
      command: "systemctl set-default graphical.target"
      when: "'graphical' not in systemdefault.stdout"

    - name: sddm - copy chili theme
      synchronize:
        src: ./files/sddm/themes/chili
        dest: /usr/share/sddm/themes

    - name: sddm - create etc directory
      file:
        path: /etc/sddm.conf.d
        state: directory

    - name: sddm - override theme directory, override current theme
      copy:
        dest: /etc/sddm.conf.d/theme.conf
        content: "{{ content }}"
      vars:
        content: |
          [Theme]
          ThemeDir=/usr/share/sddm/themes
          Current=chili

    - name: git - download dracula gnome gtk theme
      ansible.builtin.git:
        repo: "https://github.com/dracula/gtk.git"
        dest: $HOME/.themes/dracula
        update: true
      become_user: fredrick

    - name: dconf - use dracula as gnome gtk theme
      community.general.dconf:
        key: "/org/gnome/desktop/interface/gtk-theme"
        value: "'dracula'"
        state: present
      become_user: fredrick

    - name: dconf - use papirus as gnome icon theme
      community.general.dconf:
        key: "/org/gnome/desktop/interface/icon-theme"
        value: "'Papirus'"
        state: present
      become_user: fredrick

    - name: flatpak - allow themes folder in home
      command: sudo flatpak override --filesystem=$HOME/.themes
      become_user: fredrick

    - name: flatpak - set dracula as default theme
      command: sudo flatpak override --env=GTK_THEME=Dracula
      become_user: fredrick

    ############################
    ## Systemd / PAM / Agents ##
    ############################

    # gnome-keyring-daemon
    # auto-login on session with ssh key support

    - name: systemd - create systemd user service dir
      ansible.builtin.file:
        path: /home/fredrick/.config/systemd/user
        state: directory
      become_user: fredrick

    - name: systemd - copy default gnome-keyring-daemon.service
      synchronize:
        dest: /home/fredrick/.config/systemd/user
        src: /usr/lib/systemd/user/gnome-keyring-daemon.service

    - name: systemd - enable ssh on gnome-keyring-daemon.service
      ansible.builtin.replace:
        path: /home/fredrick/.config/systemd/user/gnome-keyring-daemon.service
        regexp: '"pkcs11,secrets"'
        replace: '"pkcs11,secrets,ssh"'

    - name: systemd - override gnome-keyring service with pkcsl,ssh,secret components
      ansible.builtin.systemd:
        name: gnome-keyring-daemon
        state: restarted
        scope: user
        enabled: true
        daemon_reload: true
      become_user: fredrick

    - name: pamd - unlock gnome-keyring during auth
      community.general.pamd:
        name: login
        type: auth
        control: include
        module_path: postlogin
        new_type: auth
        new_control: optional
        new_module_path: pam_gnome_keyring.so
        state: after

    - name: pamd - update gnome-keyring password during password update
      community.general.pamd:
        name: login
        type: password
        control: include
        module_path: system-auth
        new_type: password
        new_control: optional
        new_module_path: pam_gnome_keyring.so
        state: after

    - name: pamd - start gnome-keyring on new session
      community.general.pamd:
        name: login
        type: session
        control: include
        module_path: postlogin
        new_type: session
        new_control: optional
        new_module_path: pam_gnome_keyring.so
        module_arguments: 'auto_start'
        state: after

    - name: systemd - enable gpg-agent user service
      ansible.builtin.systemd:
        name: gpg-agent.socket
        state: started
        scope: user
        enabled: true
        daemon_reload: true
      become_user: fredrick

    - name: systemd - create ssh-agent service
      copy:
        dest: $HOME/.config/systemd/user/ssh-agent.service
        content: "{{ content }}"
      vars:
        content: |
          [Unit]
          Description=SSH key agent

          [Service]
          Type=simple
          Environment=SSH_AUTH_SOCK=%t/ssh-agent.socket
          ExecStart=/usr/bin/ssh-agent -D -a $SSH_AUTH_SOCK

          [Install]
          WantedBy=default.target
      become_user: fredrick

    - name: systemd - enable and start ssh-agent service
      ansible.builtin.systemd:
        name: ssh-agent.service
        state: stopped
        scope: user
        enabled: false
        daemon_reload: true
      become_user: fredrick

    - name: systemd - enable and start ssh-agent service
      ansible.builtin.systemd:
        name: ssh-agent.socket
        state: stopped
        scope: user
        enabled: false
        daemon_reload: true
      become_user: fredrick

    ################
    ## Containers ##
    ################

    - name: kubectl - create .kube directory
      file:
        path: $HOME/.kube
        state: directory
      become_user: fredrick

    - name: kubectl - touch config file
      file:
        path: $HOME/.kube/config
        state: touch
      become_user: fredrick

    # - name: docker - add user to docker group
    #   user: name=fredrick
    #     groups=docker
    #     append=yes

    # - name: docker - disable system services (for power savings)
    #   ansible.builtin.systemd:
    #     name: "{{ item }}"
    #     enabled: no
    #     masked: no
    #   become_user: root
    #   with_items:
    #     - docker.socket
    #     - docker.service
    #     - containerd.service
