---
- hosts: localhost
  become: true
  tasks:
    ##################
    ## RPM Packages ##
    ##################

    - name: dnf - remove packages
      dnf:
        name:
          - rythmbox
        state: absent

    - name: dnf - upgrade all packages
      dnf:
        name: "*"
        state: latest

    - name: dnf - import RPM keys
      ansible.builtin.rpm_key:
        state: present
        key: "{{ item }}"
      with_items:
        - "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-fedora-2020"
        - "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-nonfree-fedora-2020"

    - name: dnf - add RPM Fusion free repository
      shell: dnf install -y {{ item }}
      with_items:
        - "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ansible_distribution_major_version}}.noarch.rpm"
        - "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ansible_distribution_major_version}}.noarch.rpm"

    - name: dnf - add docker repository
      shell: dnf config-manager -y --add-repo https://download.docker.com/linux/fedora/docker-ce.repo

    - name: dnf - install docker packages
      dnf:
        name:
          - containerd.io
          - docker-ce
          - docker-ce-cli
          - docker-compose-plugin
        state: latest

    - name: dnf - install system packages
      dnf:
        name:
          - dconf-editor
          - ddcutil
          - fwupd
          - golang-github-docker-credential-helpers-devel
          - python3-psutil # Required for ansible dconf module
          - smartmontools
          - ufw
        state: latest

    - name: dnf - install user packages
      dnf:
        name:
          - alacritty
          - bat
          - curl
          - docker-compose
          - gnome-tweaks
          - gpaste
          - htop
          - inxi
          - mc
          - mpv
          - pass
          - peek
          - seahorse
          - tmux
          - transmission
          - wget
          - wireguard-tools
          - wl-clipboard
          - wofi
          - yamllint
          - yubikey-manager
          - zsh
        state: latest

    - name: dnf - install gnome extension packages
      dnf:
        name:
          - gnome-shell-extension-auto-move-windows
          - gnome-shell-extension-caffeine
          - gnome-shell-extension-gpaste
          - gnome-shell-extension-no-overview
          - gnome-shell-extension-pop-shell
          - gnome-shell-extension-sound-output-device-chooser
          - gnome-shell-extension-user-theme
          - gnome-shell-extension-workspace-indicator
        state: latest

    ###########
    ## Gnome ##
    ###########

    # This will create a bunch of popups, no way around this limitation for now.
    - name: extensions - install extensions
      shell: |
        gdbus call --session \
          --dest org.gnome.Shell.Extensions \
          --object-path /org/gnome/Shell/Extensions \
          --method org.gnome.Shell.Extensions.InstallRemoteExtension \
          "{{ item }}"
      with_items:
        - dash-to-panel@jderose9.github.com
        - launch-new-instance@gnome-shell-extensions.gcampax.github.com
        - notification-banner-reloaded@marcinjakubowski.github.com
        - places-menu@gnome-shell-extensions.gcampax.github.com
        - weeks-start-on-monday@extensions.gnome-shell.fifi.org
        - wireguard-indicator@atareao.es
      become_user: fredrick

    # - name: dconf - enable gnome extensions
    #   dconf:
    #     key: "/org/gnome/shell/enabled-extensions"
    #     value: "['background-logo@fedorahosted.org', 'dash-to-panel@jderose9.github.com', 'hass-gshell@geoph9-on-github', 'sound-output-device-chooser@kgshank.net']"
    #   become_user: fredrick

    #############
    ## FlatPak ##
    #############

    - name: add the flathub flatpak repository
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
        method: user
      become_user: fredrick

    - name: install flatpak packages
      community.general.flatpak:
        name: "{{ item }}"
        state: present
        method: user
      become_user: fredrick
      with_items:
        - com.discordapp.Discord
        - com.github.tchx84.Flatseal
        - com.gitlab.newsflash
        - com.jgraph.drawio.desktop
        - com.prusa3d.PrusaSlicer
        - com.slack.Slack
        - com.visualstudio.code
        - nl.hjdskes.gcolor3
        - org.chromium.Chromium
        - org.gnome.BreakTimer
        - org.gnome.Extensions
        - org.gnome.gitlab.YaLTeR.VideoTrimmer
        - rest.insomnia.Insomnia
        - sh.cider.Cider

    ##########
    ## asdf ##
    ##########

    - name: asdf - clone asdf repository
      git:
        repo: "https://github.com/asdf-vm/asdf.git"
        dest: "~/.asdf"
        version: v0.10.2
        update: no
        accept_hostkey: yes
      become_user: fredrick

    - name: asdf - add, install and set global versions
      shell: . $HOME/.asdf/asdf.sh && asdf plugin add "{{ item }}" && asdf install "{{ item }}" latest && asdf global "{{ item }}" latest
      args:
        executable: /usr/bin/zsh
      with_items:
        - argo
        - argo-rollouts
        - direnv
        - gcloud
        - github-cli
        - golang
        - helm
        - istioctl
        - kompose
        - krew
        - pulumi
        - kubectl
        - operator-sdk
        - stern
        - terraform
        - terraform-docs
        - yq
      register: asdf_add_result
      failed_when:
        - asdf_add_result.rc == 1 or asdf_add_result.rc == 2 and not "'already added' in asdf_add_result.stderr" # Already added plugin should be rc0..
      become_user: fredrick
