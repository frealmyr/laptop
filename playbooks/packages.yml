---
- hosts: localhost
  become: true
  tasks:
    ##################
    ## RPM Packages ##
    ##################

    - name: dnf - upgrade latest
      dnf:
        name: "*"
        state: latest

    - name: dnf - remove packages
      dnf:
        name:
          - dunst
        state: absent

    - name: dnf - import RPM fusion keys
      ansible.builtin.rpm_key:
        state: present
        key: "{{ item }}"
      with_items:
        - "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-fedora-2020"
        - "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-nonfree-fedora-2020"

    - name: dnf - add RPM Fusion free repository
      shell: dnf install -y {{ item }}
      with_items:
        - "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ansible_distribution_major_version}}.noarch.rpm"
        - "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ansible_distribution_major_version}}.noarch.rpm"

    - name: dnf - add docker repository
      shell: dnf config-manager -y --add-repo https://download.docker.com/linux/fedora/docker-ce.repo

    - name: copr - enable repositories
      community.general.copr:
        name: "{{ item }}"
        state: enabled
      with_items:
        - erikreider/SwayNotificationCenter

    - name: dnf - system
      dnf:
        name:
          - ddcutil
          - fwupd
          - golang-github-docker-credential-helpers-devel
          - power-profiles-daemon # powerprofilesctl

    - name: dnf - firmware & drivers
      dnf:
        name:
          - intel-gpu-tools
          - intel-media-driver
          - libva
          - libva-utils
          - mesa-dri-drivers

    - name: dnf - audio/video
      dnf:
        name:
          - pipewire-codec-aptx

    - name: dnf - networking
      dnf:
        name:
          - wireguard-tools

    # - name: dnf - virtualization & containerization
    #   dnf:
    #     name:
    #       - containerd.io
    #       - docker-ce
    #       - docker-ce-cli
    #       - docker-compose
    #       - docker-compose-plugin

    - name: dnf - sway
      dnf:
        name:
          - SwayNotificationCenter
          - wdisplays
          - wlsunset

    - name: dnf - cli
      dnf:
        name:
          - bat
          - curl
          - git
          - htop
          - inxi
          - mc
          - python3-pip
          - sshpass
          - tmux
          - wget
          - yamllint
          - zip
          - zsh

    - name: dnf - gui
      dnf:
        name:
          - firefox
          - flatpak
          - mpv
          - steam-devices
          - yubikey-manager
        state: latest

    - name: dnf - themes
      dnf:
        name:
          - papirus-icon-theme

    #############
    ## FlatPak ##
    #############

    - name: flatpak - flathub repository
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
        method: user
      become_user: fredrick

    - name: flatpak - install packages
      community.general.flatpak:
        name: "{{ item }}"
        state: present
        method: user
      become_user: fredrick
      with_items:
        - com.discordapp.Discord
        - com.github.tchx84.Flatseal
        - com.gitlab.newsflash
        - com.prusa3d.PrusaSlicer
        - com.rawtherapee.RawTherapee
        - com.sweethome3d.Sweethome3d
        - com.valvesoftware.Steam
        - com.visualstudio.code
        - net.scribus.Scribus
        - org.chromium.Chromium
        - org.filmulator.Filmulator
        - org.kde.digikam
        - org.remmina.Remmina
        - rest.insomnia.Insomnia
        - sh.cider.Cider

    ##########
    ## asdf ##
    ##########

    - name: asdf - clone asdf repository
      git:
        repo: "https://github.com/asdf-vm/asdf.git"
        dest: "~/.asdf"
        version: v0.11.3
        update: no
        accept_hostkey: yes
      become_user: fredrick

    - name: asdf - add, install and set global versions
      shell: . $HOME/.asdf/asdf.sh && asdf plugin add "{{ item }}" && asdf install "{{ item }}" latest && asdf global "{{ item }}" latest
      args:
        executable: /usr/bin/zsh
      with_items:
        - argo
        - argo-rollouts
        - argocd
        - direnv
        - gcloud
        - github-cli
        - golang
        - helm
        - istioctl
        - kompose
        - krew
        - kubectl
        - operator-sdk
        - pulumi
        - stern
        - terraform
        - terraform-docs
        - yq
      register: asdf_add_result
      failed_when:
        - asdf_add_result.rc == 1 or asdf_add_result.rc == 2 and not "'already added' in asdf_add_result.stderr" # Already added plugin should be rc0..
      become_user: fredrick
