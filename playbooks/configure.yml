---
- hosts: localhost
  become: true

  tasks:
    ###########
    ## Shell ##
    ###########

    - name: set zsh as default shell
      shell: chsh -s $(which zsh) fredrick

    ################
    ## Intel i915 ##
    ################

    # Enable GuC, and HuC
    # Disable GVT-g virtualization as it is incompatible with GuC
    ## https://ask.fedoraproject.org/t/intel-graphics-best-practices-and-settings-for-hardware-acceleration/21119

    - name: i915 - enable features
      ansible.builtin.lineinfile:
        path: /etc/modprobe.d/i915.conf
        line: |
          options i915 enable_guc=3
          options i915 enable_fbc=1
        create: yes

    - name: i915 - rebuild intramfs
      command: dracut --force

    ###########
    ## Gnome ##
    ###########

    # - name: dconf - enable gnome extensions
    #   dconf:
    #     key: "/org/gnome/shell/enabled-extensions"
    #     value: "['dash-to-panel@jderose9.github.com', 'weeks-start-on-monday@extensions.gnome-shell.fifi.org', 'wireguard-indicator@atareao.es', 'auto-move-windows@gnome-shell-extensions.gcampax.github.com', 'no-overview@fthx', 'pop-shell@system76.com', 'user-theme@gnome-shell-extensions.gcampax.github.com', 'notification-banner-reloaded@marcinjakubowski.github.com', 'launch-new-instance@gnome-shell-extensions.gcampax.github.com', 'workspace-indicator@gnome-shell-extensions.gcampax.github.com']"
    #   become_user: fredrick

    - name: dconf - gnome window manager
      community.general.dconf:
        key: "{{ item.path }}"
        value: "{{ item.value }}"
        state: present
      with_items:
        - path: /org/gnome/shell/overrides/dynamic-workspaces
          value: 0 # False
        - path: /org/gnome/shell/overrides/workspaces-only-on-primary
          value: 1 # True
        - path: /org/gnome/desktop/wm/preferences/num-workspaces
          value: "6"
        - path: /org/gnome/mutter/center-new-windows
          value: 0 # False
        - path: /org/gnome/mutter/edge-tiling
          value: 0 # False
      become_user: fredrick

    - name: dconf - popos shell
      community.general.dconf:
        key: "{{ item.path }}"
        value: "{{ item.value }}"
        state: present
      with_items:
        - path: /org/gnome/shell/extensions/pop-shell/active-hint
          value: 1 # True
        - path: /org/gnome/shell/extensions/pop-shell/hint-color-rgba
          value: "['rgb(254,91,255)']"
        - path: /org/gnome/shell/extensions/pop-shell/tile-by-default
          value: 1 # True
        - path: /org/gnome/shell/extensions/pop-shell/gap-inner
          value: "1"
        - path: /org/gnome/shell/extensions/pop-shell/gap-outer
          value: "1"
      become_user: fredrick

    # ########
    # ## UI ##
    # ########

    - name: dconf - disable all animations
      community.general.dconf:
        key: "/org/gnome/desktop/interface/enable-animations"
        value: "false"
        state: present
      become_user: fredrick

    - name: theme - download dracula gnome gtk theme
      ansible.builtin.git:
        repo: "https://github.com/dracula/gtk.git"
        dest: /usr/share/themes/dracula
        version: "42"

    - name: dconf - use dracula as gnome gtk theme
      community.general.dconf:
        key: "/org/gnome/desktop/interface/gtk-theme"
        value: "'dracula'"
        state: present
      become_user: fredrick

    - name: flatpak - allow themes folder in home
      command: sudo flatpak override --filesystem=$HOME/.themes
      become_user: fredrick

    - name: flatpak - set dracula as default theme
      command: sudo flatpak override --env=GTK_THEME=Dracula
      become_user: fredrick

    # ############
    # ## Docker ##
    # ############

    - name: docker - add user to docker group
      user: name=fredrick
        groups=docker
        append=yes

    - name: docker - check if docker config.json exists
      stat:
        path: ~/.docker/config.json
      become_user: fredrick
      register: dockerfile_exist_result

    - name: docker - use gnome keychain for credsStore
      ansible.builtin.lineinfile:
        path: ~/.docker/config.json
        line: |
          { 
            "credsStore": "secretservice" 
          }
        create: yes
      become_user: fredrick
      when: not dockerfile_exist_result.stat.exists

    - name: docker - disable system services (for power savings)
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: no
        masked: no
      become_user: root
      with_items:
        - docker.socket
        - docker.service
        - containerd.service

    # ##############
    # ## Firewall ##
    # ##############

    - name: firewall - enable ufw
      community.general.ufw:
        state: enabled
        policy: deny
